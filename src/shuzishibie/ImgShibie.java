package shuzishibie;

import java.awt.image.BufferedImage;
import java.awt.image.Raster;
import java.awt.print.Printable;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.imageio.ImageIO;

import org.tensorflow.Operation;
import org.tensorflow.Output;
import org.tensorflow.Shape;

import com.test.tensorflow.ChineseRecognition2;
import com.test.tensorflow.TensorFlowInferenceInterface;


public class ImgShibie {
	public static void getData(String path){
		//只是测试数据,不要在意
		double[] shuzi = { 0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0.45490199,
		         0.49019611,  0.67058825,  1.        ,  1.        ,  0.58823532,
		         0.36470589,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0.66274512,  0.99215692,  0.99215692,  0.99215692,
		         0.99215692,  0.99215692,  0.99215692,  0.85490203,  0.11764707,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0.66274512,  0.99215692,
		         0.99215692,  0.99215692,  0.83529419,  0.55686277,  0.6901961 ,
		         0.99215692,  0.99215692,  0.4784314 ,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0.20392159,  0.98039222,  0.99215692,  0.82352948,  0.1254902 ,
		         0.04705883,  0,  0.02352941,  0.80784321,  0.99215692,
		         0.54901963,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0.3019608 ,  0.98431379,
		         0.82352948,  0.09803922,  0,  0,  0,
		         0.4784314 ,  0.97254908,  0.99215692,  0.25490198,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0.12156864,  0.07058824,  0,
		         0,  0,  0,  0.81960791,  0.99215692,
		         0.99215692,  0.25490198,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0.45882356,  0.96862751,  0.99215692,  0.77647066,  0.03921569,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0.29803923,  0.96862751,  0.99215692,
		         0.90588242,  0.24705884,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0.50196081,  0.99215692,  0.99215692,  0.56470591,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0.6901961 ,  0.96470594,  0.99215692,
		         0.62352943,  0.04705883,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0.09803922,
		         0.91764712,  0.99215692,  0.91372555,  0.13725491,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0.77647066,  0.99215692,  0.99215692,
		         0.5529412 ,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0.30588236,
		         0.97254908,  0.99215692,  0.74117649,  0.04705883,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0.07450981,  0.7843138 ,  0.99215692,  0.99215692,
		         0.5529412 ,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0.52549022,
		         0.99215692,  0.99215692,  0.67843139,  0.04705883,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0.97254908,  0.99215692,  0.99215692,
		         0.09803922,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0.97254908,  0.99215692,  0.99215692,  0.16862746,  0.07843138,
		         0.07843138,  0.07843138,  0.07843138,  0.01960784,  0,
		         0.01960784,  0.07843138,  0.07843138,  0.14509805,  0.58823532,
		         0.58823532,  0.58823532,  0.57647061,  0.03921569,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0.97254908,  0.99215692,
		         0.99215692,  0.99215692,  0.99215692,  0.99215692,  0.99215692,
		         0.99215692,  0.65882355,  0.56078434,  0.65098041,  0.99215692,
		         0.99215692,  0.99215692,  0.99215692,  0.99215692,  0.99215692,
		         0.99215692,  0.48235297,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0.68235296,  0.99215692,  0.99215692,  0.99215692,
		         0.99215692,  0.99215692,  0.99215692,  0.99215692,  0.99215692,
		         0.99215692,  0.99215692,  0.99215692,  0.97647065,  0.96862751,
		         0.96862751,  0.66274512,  0.45882356,  0.45882356,  0.22352943,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0.46274513,  0.48235297,  0.48235297,  0.48235297,  0.65098041,
		         0.99215692,  0.99215692,  0.99215692,  0.60784316,  0.48235297,
		         0.48235297,  0.16078432,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0,  0,
		         0,  0,  0,  0};
			
	            //需要jdk1.8并且是64位
	            System.load("D:\\tensorflow_jni.dll");
	            //参数1.模型路径,2.可以自己命名,看了下源码没感觉用处
	            TensorFlowInferenceInterface tfi = new TensorFlowInferenceInterface("D:\\mnist.pb","imageType");
	            //模型输出名称y_conv_add
	            final Operation operation = tfi.graphOperation("y_conv_add");  
	            Output output = operation.output(0);  
	            Shape shape = output.shape();  
	            final int numClasses = (int) shape.size(1); 
	            ChineseRecognition2 ch = new ChineseRecognition2();
//	            float[] floatValues = ch.getImagePixel("D:\\one.jpg"); //将图片处理为输入对应张量格式,如果模型数据量足够大,可以自己画图片测试  
	            float[] float1 = new float[shuzi.length];
	            for (int i = 0; i < shuzi.length; i++) {
					float1[i] = (float) shuzi[i];
				}
	            
	            tfi.feed("xinput", float1, 1, 784); //将数据复制给输入张量x_input即为模型定义时的x名称  
	            tfi.run(new String[] { "y_conv_add" }, false);//输出张量  
	            float[] outPuts = new float[numClasses];//结果分类  
	            tfi.fetch("y_conv_add", outPuts);//接收结果 outPuts保存的即为预测结果对应的概率，最大的一个通常为本次预测结果  
	            float f = outPuts[0];
	            int num = 0;
	            for (int i = 0; i < outPuts.length; i++) {
	            	if (f < outPuts[i]) {
						f = outPuts[i];
						num = i;
					}
	            	
				}
	            System.out.println(f);
	            //预测数字是多少
	            System.out.println(num);
	            
	}
	public static void main(String[] args) {
		ImgShibie.getData("");
	}
	
}
